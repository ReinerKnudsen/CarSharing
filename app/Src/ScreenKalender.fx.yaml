"ScreenKalender As screen.'phoneLayout_Calendar_ver3.0'":
    Height: =Max(App.Height, App.DesignHeight)
    OnVisible: |-
        =Set( myCalendar, LookUp(Office365Outlook.CalendarGetTablesV2().value, name = "CarSharing"));
        /*Set( UTCNow, Text( DateAdd( Now(), 0, Minutes), UTC));*/
        /*Set( UTCNext, Text( DateAdd( Now(), 1, Years), UTC));*/
        
        /*retrieves calendar events for all days in current month view and selected calendar 
        _minDate and _maxDate act as markers to prevent duplicate data collection*/         
        If(IsBlank(_userDomain),         
        	UpdateContext({_showLoading: true});         
        	Set(_userDomain, Right(User().Email, Len(User().Email) - Find("@", User().Email)));         
        	Set(_dateSelected, Today());         
        	Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));         
        	Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 1), Days));         
        	Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))         
        );         
        Set(_calendarVisible, false);         
        UpdateContext({_showLoading: true});             
        Set(_minDate, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
        Set(_maxDate, DateAdd(DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 1), Days), 1, Years));         
        ClearCollect( MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2( myCalendar.id, Text(_minDate, UTC), Text(_maxDate, UTC)).value);         
        UpdateContext({_showLoading: false});         
        Set(_calendarVisible, true)
    Width: =Max(App.Width, App.DesignWidth)

    "CalendarEventsGallery1 As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver4.0'":
        AccessibleLabel: ="Calendar events for selected day"
        BorderColor: =RGBA(230, 230, 230, 1)
        Height: =487
        Items: |-
            =/*Shows events only on selected date*/
            SortByColumns(
                Filter(
                    MyCalendarEvents, 
                    And(DateDiff(ThisRecord.Start, _dateSelected) >= 0, DateDiff(_dateSelected, ThisRecord.End) >= 0)
                    ), 
                    "Start")
        Layout: =Layout.Vertical
        OnSelect: =If( ThisItem.Subject = Session.Group, Navigate(ScreenBuchungAendern, ScreenTransition.None),false)
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =168
        Visible: =_calendarVisible
        Width: =Parent.Width
        Y: =LblCalendarEventsHeader1.Y + LblCalendarEventsHeader1.Height
        ZIndex: =2

        Title7 As label:
            Color: =RGBA(0, 134, 208, 1)
            Height: =36
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Subject
            VerticalAlign: =VerticalAlign.Top
            Width: =396
            X: =180
            Y: =16
            ZIndex: =1

        Subtitle3_1 As label:
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: |-
                ="Start:"
            Width: =146
            X: =180
            Y: =52
            ZIndex: =2

        Separator3_1 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =5

        Label1_1 As label:
            OnSelect: =Select(Parent)
            Size: =18
            Text: =ThisItem.Start
            Width: =298
            X: =278
            Y: =52
            ZIndex: =6

        Subtitle3_2 As label:
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: |-
                ="Ende:"
            Width: =146
            X: =180
            Y: =92
            ZIndex: =8

        Label1_3 As label:
            OnSelect: =Select(Parent)
            Size: =18
            Text: =ThisItem.End
            Width: =298
            X: =278
            Y: =92
            ZIndex: =9

        Image9 As image:
            Image: ='car-driver blau'
            X: =26
            Y: =32
            ZIndex: =11

    RectQuickActionBar1 As rectangle:
        Width: =Parent.Width
        ZIndex: =3

    LblAppName1 As label:
        Align: =Align.Center
        FontWeight: =FontWeight.Bold
        Height: =100
        Size: =27
        Text: ="Kalender"
        Width: =351
        Wrap: =false
        X: =144
        ZIndex: =4

    LblMonthSelected1 As label:
        Align: =Align.Center
        Height: =64
        Size: =24
        Text: =Text(_firstDayOfMonth, "mmmm yyyy")
        Visible: =_calendarVisible
        Width: =422
        Wrap: =false
        X: =183
        Y: =117
        ZIndex: =7

    iconPrevMonth1 As icon.ChevronLeft:
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =/*changes month view to previous month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));           
            /*collects calendar events for all days in current month view. Updates _minDate to prevent duplicate data collection if user returns to this month view*/           
            If(_minDate > _firstDayOfMonth,           
             Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2( myCalendar.id, Text(_firstDayInView, UTC), Text(DateAdd(_minDate, -1, Days), UTC)).value);           
             Set(_minDate, _firstDayInView))
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="View previous month"
        Visible: =_calendarVisible
        Width: =91
        X: =150
        Y: =117
        ZIndex: =8

    iconNextMonth1 As icon.ChevronRight:
        Icon: =Icon.ChevronRight
        OnSelect: |-
            =/*changes month view to next month*/
                       
            Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, Months));           
            Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));           
            /*collects calendar events for all days in current month view. Updates _maxDate to prevent duplicate data collection if user returns to this month view*/           
            Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));           
            If(_maxDate < _lastDayOfMonth,           
             Collect(MyCalendarEvents, Office365Outlook.GetEventsCalendarViewV2( myCalendar.id, Text(DateAdd(_maxDate, 1, Days), UTC), DateAdd(_firstDayInView, 40, Days)).value);           
             Set(_maxDate, DateAdd(_firstDayInView, 40, Days)))
        PaddingBottom: =10
        PaddingLeft: =10
        PaddingRight: =10
        PaddingTop: =10
        TabIndex: =0
        Tooltip: ="View next month"
        Visible: =_calendarVisible
        Width: =91
        X: =Parent.Width - Self.Width
        Y: =117
        ZIndex: =9

    WeekdayGallery1 As gallery.WeekdayGallery:
        AccessibleLabel: ="Days of the week"
        Height: =45
        Items: =Calendar.WeekdaysShort()
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =91
        Visible: =_calendarVisible
        Width: =Parent.Width
        Y: =LblMonthSelected1.Y + LblMonthSelected1.Height + 20
        ZIndex: =10

        Title1 As label:
            Align: =Align.Center
            Height: =WeekdayGallery1.TemplateHeight
            OnSelect: =Select(Parent)
            Size: =17 * WeekdayGallery1.TemplateWidth / 77
            Text: =ThisItem.Value
            VerticalAlign: =Middle
            Width: =WeekdayGallery1.TemplateWidth
            Wrap: =false
            X: =WeekdayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =WeekdayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =1

    MonthDayGallery1 As gallery.MonthDayGallery:
        AccessibleLabel: ="Days of selected month"
        Height: =390
        Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
        Layout: =Layout.Vertical
        ShowScrollbar: =false
        TemplatePadding: =0
        TemplateSize: =65
        Visible: =_calendarVisible
        Width: =Parent.Width
        WrapCount: =7
        Y: =WeekdayGallery1.Y + WeekdayGallery1.Height
        ZIndex: =11

        icoStart As circle:
            Height: =Self.Width
            OnSelect: |-
                =/*UpdateContext( 
                    {
                        datePicked: DateAdd(_firstDayInView,ThisItem.Value,Days)
                    }); */
                Select(Parent)
            Visible: |-
                =/*Visible if calendar events are found on this day*/  
                            
                CountRows(Filter(MyCalendarEvents, DateValue(Text(Start)) = DateAdd(_firstDayInView,ThisItem.Value,Days))) > 0 && !icoSelected.Visible && labDay.Visible
            Width: =6.5
            X: =MonthDayGallery1.TemplateWidth / 2 - Self.Width / 2
            Y: =MonthDayGallery1.TemplateHeight * (0.75)
            ZIndex: =1

        icoSelected As circle:
            Height: =3 * labDay.Size
            OnSelect: =Select(Parent)
            Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, labDay.Visible)
            Width: =Self.Height
            X: =MonthDayGallery1.TemplateWidth/2 - Self.Width/2
            Y: =MonthDayGallery1.TemplateHeight / 2 - Self.Height / 2
            ZIndex: =2

        labDay As label:
            Align: =Align.Center
            BorderColor: =RGBA(0, 0, 0, 0)
            Color: =If(DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(255, 255, 255, 1), DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(47, 41, 43, 1), LblMonthSelected1.Color)
            Fill: |-
                =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                If(
                    /*Date selected is today*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = _dateSelected, RGBA(0,0,0,0),
                    /*Today when it is not selected*/
                    DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(icoSelected.Fill, 0.67), 
                    /*The day is outside the range of the currently selected month*/
                    Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
            FocusedBorderColor: =Self.Color
            FocusedBorderThickness: =2
            FontWeight: =
            Height: =MonthDayGallery1.TemplateHeight
            OnSelect: =Set(_dateSelected, DateAdd(_firstDayInView, ThisItem.Value, Days))
            Size: =17 * MonthDayGallery1.TemplateWidth / 91
            TabIndex: =0
            Text: =Day(DateAdd(_firstDayInView,ThisItem.Value,Days))
            VerticalAlign: =Middle
            Visible: |-
                =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                 !(DateAdd(_firstDayInView,ThisItem.Value,Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value,Days)) + 1 > _lastDayOfMonth)
            Width: =MonthDayGallery1.TemplateWidth
            Wrap: =false
            ZIndex: =3

        icoBusy As icon.ArrowRight:
            Height: =20
            Icon: =Icon.ArrowRight
            Visible: |-
                =CountRows( 
                          Filter( 
                              MyCalendarEvents,
                              And( 
                                  DateValue( Text( Start)) < DateAdd( _firstDayInView, ThisItem.Value, Days),
                                  DateValue( Text( End)) >= DateAdd( _firstDayInView, ThisItem.Value, Days)
                                  )
                                )
                            ) > 0 && !icoSelected.Visible && labDay.Visible && !icoStart.Visible
            Width: =20
            X: =35
            Y: =43
            ZIndex: =4

    RectCalendarEventsHeader1 As rectangle:
        Height: =LblCalendarEventsHeader1.Height
        Visible: =_calendarVisible
        Width: =LblCalendarEventsHeader1.Width
        X: =LblCalendarEventsHeader1.X
        Y: =LblCalendarEventsHeader1.Y
        ZIndex: =12

    LblCalendarEventsHeader1 As label:
        Align: =Align.Center
        Color: =RGBA(255, 255, 255, 1)
        Fill: =RGBA(56, 96, 178, 1)
        Height: =60
        PaddingLeft: =30
        Size: =21
        Text: =Text(_dateSelected, DateTimeFormat.LongDate)
        Visible: =_calendarVisible
        Width: =Parent.Width
        Wrap: =false
        Y: =MonthDayGallery1.Y + MonthDayGallery1.Height + If(DateAdd(_firstDayInView, 35, Days) > _lastDayOfMonth, -50, 0)
        ZIndex: =13

    LblNoEvents1 As label:
        Align: =Align.Center
        DisplayMode: =DisplayMode.View
        Height: =64
        Size: =21
        Text: =If(_showLoading, "Ich suche Buchungen...", "Der Fabi ist frei")
        Visible: =Or(_showLoading, CountRows(CalendarEventsGallery1.AllItems) = 0 && _calendarVisible)
        Width: =CalendarEventsGallery1.Width
        Wrap: =false
        Y: =CalendarEventsGallery1.Y + CalendarEventsGallery1.Height/2 - Self.Height/2
        ZIndex: =14

    Icon1_1 As icon.Add:
        Color: =RGBA(255, 255, 255, 1)
        Icon: =Icon.Add
        OnSelect: |-
            =Navigate(ScreenNeueBuchung, ScreenTransition.UnCoverRight, {_locDateSelected: _dateSelected})
        X: =562
        Y: =18
        ZIndex: =15

    ButtonBack_9 As button:
        Align: =Align.Left
        BorderColor: =Transparent
        BorderThickness: =0
        Fill: =Transparent
        Height: =80
        HoverBorderColor: =Self.BorderColor
        HoverFill: =Self.Fill
        OnSelect: =Navigate(Start, ScreenTransition.None)
        PaddingLeft: =10
        PressedBorderColor: =Self.BorderColor
        PressedFill: =Self.HoverFill
        Size: =24
        Text: ="Zurück"
        X: =6
        Y: =10
        ZIndex: =19

    Group3 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =19

        Label26 As label:
            Align: =Align.Center
            FontWeight: =FontWeight.Bold
            Height: =44
            OnSelect: |-
                =/*resets calendar view and date selection to today*/
                         
                Set(_dateSelected, Today());         
                Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));         
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))
            Size: =23
            Text: =Day(Today())
            Width: =64
            X: =23
            Y: =137
            ZIndex: =17

        Image11 As image:
            Height: =64
            Image: ='007-calendar-1'
            OnSelect: |-
                =/*resets calendar view and date selection to today*/
                         
                Set(_dateSelected, Today());         
                Set(_firstDayOfMonth, DateAdd(Today(), 1 - Day(Today()), Days));         
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));         
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days))
            Width: =64
            X: =23
            Y: =117
            ZIndex: =18

    labVersion_3 As label:
        Align: =Align.Center
        Color: =RGBA(0, 13, 75, 1)
        Fill: =RGBA(230, 230, 230, 0.53)
        Height: =45
        OnSelect: =Navigate(ScreenVersionen, ScreenTransition.None)
        Size: =16
        Text: ="Version " & LookUp( myVersionen, creb3_index = Max( myVersionen, creb3_index)).version
        Width: =640
        Y: =1091
        ZIndex: =20

